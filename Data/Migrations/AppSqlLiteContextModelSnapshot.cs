// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppSqlLiteContext))]
    partial class AppSqlLiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Domain.Entities.DocumentoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("NotaFiscalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TipoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("base64")
                        .HasColumnType("TEXT");

                    b.Property<string>("extensao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NotaFiscalId");

                    b.HasIndex("TipoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Domain.Entities.NotaFiscalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataCobranca")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataDeEmissao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataDePagamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroIdentificacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PagadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PagadorId");

                    b.HasIndex("StatusId");

                    b.ToTable("NotaFiscais");
                });

            modelBuilder.Entity("Domain.Entities.PagadorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Pagadores");
                });

            modelBuilder.Entity("Domain.Entities.StatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Domain.Entities.TipoDocumentoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("Domain.Entities.DocumentoEntity", b =>
                {
                    b.HasOne("Domain.Entities.NotaFiscalEntity", "NotaFiscal")
                        .WithMany("Documentos")
                        .HasForeignKey("NotaFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoDocumentoEntity", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotaFiscal");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Domain.Entities.NotaFiscalEntity", b =>
                {
                    b.HasOne("Domain.Entities.PagadorEntity", "Pagador")
                        .WithMany("Notafiscais")
                        .HasForeignKey("PagadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.StatusEntity", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagador");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Domain.Entities.NotaFiscalEntity", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("Domain.Entities.PagadorEntity", b =>
                {
                    b.Navigation("Notafiscais");
                });
#pragma warning restore 612, 618
        }
    }
}
